#
# Board configuration file for the Freescale IMX6Q Sabre SD EVM
#
# This board does not have an embedded JTAG adapter, you must source
# a suitable adapter configuration before sourcing this file.

# Sabre SD has a standard ARM-20 JTAG connector with
# nTRST and nSRST available.
reset_config trst_and_srst

# the only possible transport is JTAG
transport select jtag

# iMX6Q POR gates JTAG and the chip is completely incommunicado
# over JTAG for at least 10ms after nSRST is deasserted
adapter_nsrst_delay 11

# Source generic iMX6Q target configuration
set CHIPNAME imx6s
source [find target/imx6s.cfg]

# function to apply initial configuration after a reset. It
# provides a basic pad configuration.
# This configuration is taken from the imximage.cfg file of v2k platform
proc apply_dcd { } {
	/* Enable all clocks */
	mww 0x020c4068 0xffffffff
	mww 0x020c406c 0xffffffff
	mww 0x020c4070 0xffffffff
	mww 0x020c4074 0xffffffff
	mww 0x020c4078 0xffffffff
	mww 0x020c407c 0xffffffff
	mww 0x020c4080 0xffffffff
	mww 0x020c4084 0xffffffff

	/* IOMUX - DDR IO Type */
	mww 0x020e0618 0x000c0000
	mww 0x020e05fc 0x00000000

	/* Clock */
	mww 0x020e032c 0x00000030

	/* Address */
	mww 0x020e0300 0x00000028
	mww 0x020e02fc 0x00000028
	mww 0x020e05f4 0x00000028

	/* Control */
	mww 0x020e0340 0x00000028

	mww 0x020e0320 0x00000000
	mww 0x020e0310 0x00000028
	mww 0x020e0314 0x00000028
	mww 0x020e0614 0x00000028

	/* Data Strobe */
	mww 0x020e05f8 0x00020000
	mww 0x020e0330 0x00000028
	mww 0x020e0334 0x00000028
	mww 0x020e0338 0x00000028
	mww 0x020e033c 0x00000028

	/* Data */
	mww 0x020e0608 0x00020000
	mww 0x020e060c 0x00000028
	mww 0x020e0610 0x00000028
	mww 0x020e061c 0x00000028
	mww 0x020e0620 0x00000028
	mww 0x020e02ec 0x00000028
	mww 0x020e02f0 0x00000028
	mww 0x020e02f4 0x00000028
	mww 0x020e02f8 0x00000028

	/* Calibrations - ZQ */
	mww 0x021b0800 0xa1390003

	/* Write leveling */
	mww 0x021b080c 0x00290025
	mww 0x021b0810 0x00210022

	/* DQS Read Gate */
	mww 0x021b083c 0x4142013a
	mww 0x021b0840 0x012e0123

	/* Read/Write Delay */
	mww 0x021b0848 0x43474949
	mww 0x021b0850 0x38383c38

	/* Read data bit delay */
	mww 0x021b081c 0x33333333
	mww 0x021b0820 0x33333333
	mww 0x021b0824 0x33333333
	mww 0x021b0828 0x33333333

	/* Complete calibration by forced measurement */
	mww 0x021b08b8 0x00000800

	/* MMDC init - DDR3, 64-bit mode, only MMDC0 is initiated */
	mww 0x021b0004 0x0002002d
	mww 0x021b0008 0x00333040
	mww 0x021b000c 0x676b52f2
	mww 0x021b0010 0x926e8b63
	mww 0x021b0014 0x01ff00db
	mww 0x021b0018 0x00011740
	mww 0x021b001c 0x00008000
	mww 0x021b002c 0x000026d2
	mww 0x021b0030 0x006b1023
	mww 0x021b0040 0x0000005f
	mww 0x021b0000 0x84190000

	/* Initialize MT41K256M16HA-125 - MR2 */
	mww 0x021b001c 0x02008032
	/* MR3 */
	mww 0x021b001c 0x00008033
	/* MR1 */
	mww 0x021b001c 0x00048031
	/* MR0 */
	mww 0x021b001c 0x15108030
	/* DDR device ZQ calibration */
	mww 0x021b001c 0x04008040

	/* Final DDR setup, before operation start */
	mww 0x021b0020 0x00007800
	mww 0x021b0818 0x00022227
	mww 0x021b001c 0x00000000
}

# disable watchdog
proc disable_wdog { } {
	mwh 0x020bc000 0x30
}

# This function applies the initial configuration after a "reset init"
# command
proc imx6q_vining2000_init { } {
	disable_wdog
	apply_dcd
}

# prevent cortex-a code from asserting SRST again
$_TARGETNAME.0 configure -event reset-assert { }
# hook the init function into the reset-init event
$_TARGETNAME.0 configure -event reset-init { imx6q_vining2000_init }
# make sure target is halted when gdb attaches
$_TARGETNAME.0 configure -event gdb-attach { halt }
# set a slow default JTAG clock, can be overridden later
adapter_khz 1000
